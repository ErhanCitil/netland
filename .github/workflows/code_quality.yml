name: Code quality checks

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
      - main
      - stable/*
    tags:
    paths:
      - '**.py'
      - '**.json'
      - '**.yaml'
      - '**.in'
  pull_request:
    paths:
      - '**.py'
      - '**.json'
      - '**.yaml'
      - '**.in'
  workflow_dispatch:

jobs:
  isort:
    name: Check import sorting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up backend environment
        uses: maykinmedia/setup-django-backend@v1
        with:
          python-version: '3.10'
          setup-node: 'no'
      - uses: isort/isort-action@v1.1.0
        with:
          requirements-files: requirements/ci.txt
          sort-paths: 'src docs bin'
          configuration: '--check-only --diff'

  black:
    name: Check code formatting with black
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up backend environment
        uses: maykinmedia/setup-django-backend@v1
        with:
          python-version: '3.10'
          setup-node: 'no'
      - name: Run black
        run: black --check src docs bin

  flake8:
    name: Code style (flake8)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up backend environment
        uses: maykinmedia/setup-django-backend@v1
        with:
          python-version: '3.10'
          setup-node: 'no'
      - name: Run flake8
        id: flake8
        run: |
          flake8 src 2>&1 | tee flake8_output.txt
          result_code=${PIPESTATUS[0]}
          report="$(cat flake8_output.txt)"
          report="${report//$'\n'/'%0A'}"  # escape newlines
          echo "FLAKE8_REPORT=${report}" >> $GITHUB_OUTPUT
          exit $result_code
      - name: Emit flake8 flake8 output
        if: ${{ failure() }}
        run: |
          echo "${{ steps.flake8.outputs.FLAKE8_REPORT }}"

          echo 'flake8 found some issues' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '| File | Line | Column | Issue |' >> $GITHUB_STEP_SUMMARY
          echo '| :--- | ---- | ------ | :---- |' >> $GITHUB_STEP_SUMMARY
          python ./bin/flake8_summary.py "${{ steps.flake8.outputs.FLAKE8_REPORT }}" >> $GITHUB_STEP_SUMMARY

  migrations:
    name: Check for model changes not present in migrations
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        # Needed because the postgres container does not provide a healthcheck
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up backend environment
        uses: maykinmedia/setup-django-backend@v1
        with:
          python-version: '3.10'
          setup-node: 'no'
      - name: Run makemigrations to check for missing migrations
        run: |
          src/manage.py makemigrations \
            --check \
            --dry-run
        env:
          DJANGO_SETTINGS_MODULE: "netland.conf.ci"
          DEBUG: 'true'
          SECRET_KEY: dummy
          DB_USER: postgres
          DB_NAME: postgres
          DB_PASSWORD: ''
